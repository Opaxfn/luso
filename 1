import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.*;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.scene.text.FontPosture;
import javafx.stage.Stage;

public class ExamenIntra extends Application {
    @Override
    public void start(Stage primaryStage) {
        primaryStage.setTitle("Examen Intra");

        // Components
        TextField nameField = new TextField("Votre Nom");
        nameField.setFont(Font.font("Courier", 14));

        // RadioButtons for text case
        RadioButton minuscule = new RadioButton("minuscule");
        RadioButton majuscule = new RadioButton("majuscule");
        ToggleGroup caseGroup = new ToggleGroup();
        minuscule.setToggleGroup(caseGroup);
        majuscule.setToggleGroup(caseGroup);

        // CheckBoxes for bold and italic
        CheckBox bold = new CheckBox("gras");
        CheckBox italic = new CheckBox("italique");

        // Rectangles for color
        Rectangle redRect = new Rectangle(50, 50, Color.RED);
        Rectangle greenRect = new Rectangle(50, 50, Color.GREEN);
        Rectangle blueRect = new Rectangle(50, 50, Color.BLUE);

        // Layout
        VBox layout = new VBox(10);
        HBox radioButtons = new HBox(10, minuscule, majuscule);
        HBox checkBoxes = new HBox(10, bold, italic);
        HBox rectangles = new HBox(10, redRect, greenRect, blueRect);

        layout.getChildren().addAll(nameField, radioButtons, checkBoxes, rectangles);

        // Event Handlers
        caseGroup.selectedToggleProperty().addListener((obs, oldToggle, newToggle) -> {
            if (newToggle == minuscule) {
                nameField.setText(nameField.getText().toLowerCase());
            } else if (newToggle == majuscule) {
                nameField.setText(nameField.getText().toUpperCase());
            }
        });

        bold.setOnAction(e -> updateFontStyle(nameField, bold, italic));
        italic.setOnAction(e -> updateFontStyle(nameField, bold, italic));

        redRect.setOnMouseClicked(e -> nameField.setStyle("-fx-text-fill: red;"));
        greenRect.setOnMouseClicked(e -> nameField.setStyle("-fx-text-fill: green;"));
        blueRect.setOnMouseClicked(e -> nameField.setStyle("-fx-text-fill: blue;"));

        // Scene and Stage
        Scene scene = new Scene(layout, 300, 200);
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    private void updateFontStyle(TextField textField, CheckBox bold, CheckBox italic) {
        FontWeight weight = bold.isSelected() ? FontWeight.BOLD : FontWeight.NORMAL;
        FontPosture posture = italic.isSelected() ? FontPosture.ITALIC : FontPosture.REGULAR;
        textField.setFont(Font.font("Courier", weight, posture, 14));
    }

    public static void main(String[] args) {
        launch(args);
    }
}